@PACKAGE_INIT@

if(@Qt5Core_FOUND@)
  find_package(Qt5 @Qt5Core_VERSION_MAJOR@.@Qt5Core_VERSION_MINOR@ NO_MODULE REQUIRED COMPONENTS Core Network)
  find_package(Qt5 @Qt5Core_VERSION_MAJOR@.@Qt5Core_VERSION_MINOR@ NO_MODULE COMPONENTS Widgets)
else()
  find_package(Qt4 @QT_VERSION_MAJOR@.@QT_VERSION_MINOR@)
endif()

set_and_check(GammaRay_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR@")
list(APPEND GammaRay_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR@/..")

set(GAMMARAY_PLUGIN_INSTALL_DIR @PLUGIN_INSTALL_DIR@)
set(GAMMARAY_PLUGIN_VERSION @GAMMARAY_PLUGIN_VERSION@)
set(GAMMARAY_PROBE_ABI @GAMMARAY_PROBE_ABI@)
set(GAMMARAY_PROBE_PLUGIN_INSTALL_DIR @PROBE_PLUGIN_INSTALL_DIR@)

set(GAMMARAY_BUILD_UI @GAMMARAY_BUILD_UI@)
set(GAMMARAY_PROBE_ONLY_BUILD @GAMMARAY_PROBE_ONLY_BUILD@)

set(GAMMARAY_STATIC_PROBE @GAMMARAY_STATIC_PROBE@)
set(GAMMARAY_LIBRARY_TYPE @GAMMARAY_LIBRARY_TYPE@)
set(GAMMARAY_PLUGIN_TYPE @GAMMARAY_PLUGIN_TYPE@)

if(NOT GAMMARAY_OUTPUT_PREFIX)
  set(GAMMARAY_OUTPUT_PREFIX ${PROJECT_BINARY_DIR})
endif()

include("${CMAKE_CURRENT_LIST_DIR}/GammaRayTarget.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/GammaRayMacros.cmake")
