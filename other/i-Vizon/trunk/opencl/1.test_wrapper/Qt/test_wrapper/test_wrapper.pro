TEMPLATE = app
CONFIG += console
CONFIG -= app_bundle
CONFIG -= qt

include(../../../wrapper/ivizonQt.pri)

imx6qSabreAuto {
    target.path = /home/root/CL
    target.files += test_wrapper
    target.CONFIG += no_link target_predeps

    target.commands = $(COPY_DIR) ../../wrk_grp_info.cl $$OUT_PWD
    target.files += ../../wrk_grp_info.cl
    first.depends = $(first) target
    export(first.depends)
    export(target.commands)
    QMAKE_EXTRA_TARGETS += first target

    other_files.files = ../../wrk_grp_info.cl
    other_files.path = /home/root/CL

    INSTALLS += other_files target

#    # list your files in this variable.
#    # Masks are available with $$files functions but
#    # if your set of files changes (files added or removed)
#    # your have to re-run qmake after that explicitly, not just make
#    MYFILES = $$files(../../wrk_grp_info.cl)

#    copy_files.name = copy large files
#    copy_files.input = MYFILES
#    # change datafiles to a directory you want to put the files to
#    copy_files.output = $${OUT_PWD}/datafiles/${QMAKE_FILE_BASE}${QMAKE_FILE_EXT}
#    copy_files.commands = ${COPY_FILE} ${QMAKE_FILE_IN} ${QMAKE_FILE_OUT}
#    copy_files.CONFIG += no_link target_predeps

#    QMAKE_EXTRA_COMPILERS += copy_files
}

linuxPC {
    copydata.commands = $(COPY_DIR) ../../wrk_grp_info.cl $$OUT_PWD
    first.depends = $(first) copydata
    export(first.depends)
    export(copydata.commands)
    QMAKE_EXTRA_TARGETS += first copydata

#The meaning of the different names in the above are as follows:
#   $(COPY_DIR) – Holds a platform-dependent copy-command that makes
#                 sure to copy recursively.
#   $$PWD       – Holds the name of the source code directory,
#                 where your .pro file resides.
#   $$OUT_PWD   – Holds the name of the build directory.
#                 Note that this may not work if you are running
#                 qmake and make in the same directory as your source code,
#                 as you will be copying into the same folder as you copy from.
#   copydata    – Just a name we choose. You can replace this with whatever you want.
#   first       - This is a build step that already exists in the Makefile generated by qmake.
#                 We attach the copy build step to this build step.
#   export      – Makes the variable in the argument of the function available
#                 in a global scope.
#   QMAKE_EXTRA_TARGETS - Tells qmake that you want to build more targets than the ones it adds by default to the Makefile.
}

QMAKE_EXTRA_TARGETS += copyfiles
POST_TARGETDEPS += copyfiles

SOURCES += ../../test_wrapper.cpp

OTHER_FILES += \
    ../../wrk_grp_info.cl

DEFINES += IVIZON_DEBUG CL_INFO_PRINT
