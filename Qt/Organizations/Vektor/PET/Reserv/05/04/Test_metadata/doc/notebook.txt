//--------------------------------------------------------
#if 0
    QStringList paths = QCoreApplication::libraryPaths();
    paths.append(".");
    paths.append("platforms");
    paths.append("sqldrivers");
    QCoreApplication::setLibraryPaths(paths);
#endif
//--------------------------------------------------------
#include <QFormBuilder>
#include <QGridLayout>


QFormBuilder fb;
QFile fileOut("xxx.ui");

bool ok = fileOut.open(QIODevice::ReadWrite);
emit info(QString("ok is %1").arg(ok ? "true" : "false"));

QPushButton *x0 = new QPushButton();
QPushButton *x1 = new QPushButton();
QPushButton *x2 = new QPushButton();

x0->setText("x0");
x1->setText("x1");
x2->setText("x2");

x0->setObjectName("x0");
x1->setObjectName("x1");
x2->setObjectName("x2");

QGridLayout *grid = new QGridLayout();
grid->addWidget(x0, 0, 0);
grid->addWidget(x1, 1, 0);
grid->addWidget(x2, 2, 0);

QWidget *w = new QWidget();
w->setLayout(grid);
w->show();

fb.save(&fileOut, w);
//--------------------------------------------------------
void MainBox::paintEvent(QPaintEvent *)
{
    QPainter p(this);
    p.setPen(QPen(Qt::red, 1, Qt::SolidLine));
    p.drawLine(0, 0, width(), height());
    p.drawLine(0, height(), width(), 0);
}
//--------------------------------------------------------
Param<int> temp;
temp.set(6);
emit info(QString("%1").arg(temp.get()));

Param<float> temp2;
temp2.set(6.5);
emit info(QString("%1").arg(temp2.get()));

Param<QString> temp3;
temp3.set("проба");
emit info(QString("%1").arg(temp3.get()));

Param<QByteArray> temp4;
temp4.set("11111");
emit info(QString("%1").arg(temp4.get().toHex().data()));
//--------------------------------------------------------
#include <QDateTime>

QString s0 = "";
QString s1 = "";
QString s2 = "";

QStringList sl;

sl << "LOG_EMERG  "
   << "LOG_ALERT  "
   << "LOG_CRIT   "
   << "LOG_ERR    "
   << "LOG_WARNING"
   << "LOG_NOTICE "
   << "LOG_INFO   "
   << "LOG_DEBUG  ";

foreach (QString lvl, sl)
{
    QDateTime dtime = QDateTime::currentDateTime();

    s0 = dtime.toString("dd-MM-yy hh:mm:ss");
    s1 = lvl;
    s2 = "message";
    emit info(QString("%1\t%2\t%3").arg(s0).arg(s1).arg(s2));
}
//--------------------------------------------------------
#ifdef Q_OS_LINUX
    #include <syslog.h>
#endif
#include <QProgressDialog>
#include <QProgressBar>
#include "sleeper.h"

#if 1
    QProgressBar *p_bar = new QProgressBar();
    p_bar->setMinimum(0);
    p_bar->setMaximum(0);

    QStyle *style = QStyleFactory::create("Fusion");
    if(style)
    {
        p_bar->setStyle(style);
    }
    else
    {
        emit error("Style is FAIL");
    }

    QProgressDialog progress("Пожалуйста, ждите!", 0, 0, 0, this);
    progress.setWindowFlags(Qt::SplashScreen);
    //progress.setWindowFlags(Qt::Dialog | Qt::WindowTitleHint | Qt::WindowSystemMenuHint | Qt::WindowContextHelpButtonHint);
    //progress.setWindowModality(Qt::WindowModal);
    progress.setFixedWidth(320);
    progress.setBar(p_bar);
    progress.show();

    for(int n=0; n<1000; n++)
    {
        QCoreApplication::processEvents();
        Sleeper::msleep(10);
    }

    progress.close();
#endif

#ifdef Q_OS_LINUX
    syslog(LOG_EMERG,   "LOG_EMERG");
    syslog(LOG_ALERT,   "LOG_ALERT");
    syslog(LOG_CRIT,    "LOG_CRIT");
    syslog(LOG_ERR,     "LOG_ERR");
    syslog(LOG_WARNING, "LOG_WARNING");
    syslog(LOG_NOTICE,  "LOG_NOTICE");
    syslog(LOG_INFO,    "LOG_INFO");
    syslog(LOG_DEBUG,   "LOG_DEBUG");
#endif
//--------------------------------------------------------
#include <windows.h>

#define VER_FILEVERSION             1,0,0,0
#define VER_FILEVERSION_STR         "1.0.0.0\0"
#define VER_PRODUCTVERSION          1,0,0
#define VER_PRODUCTVERSION_STR      "1.0.0\0"
#define VER_FILEDESCRIPTION_STR     "HelloWorld"
#define VER_INTERNALNAME_STR        "Sensor"
#define VER_LEGALCOPYRIGHT_STR      "Copyright (C) 2015, MyCompany"
#define VER_ORIGINALFILENAME_STR    "HelloWorld.exe"
#define VER_PRODUCTNAME_STR         "Hello World"

VS_VERSION_INFO VERSIONINFO
FILEVERSION     VER_FILEVERSION
PRODUCTVERSION  VER_PRODUCTVERSION
BEGIN
    BLOCK "StringFileInfo"
    BEGIN
        BLOCK "040904E4"
        BEGIN
            VALUE "FileDescription",    VER_FILEDESCRIPTION_STR
            VALUE "FileVersion",        VER_FILEVERSION_STR
            VALUE "InternalName",       VER_INTERNALNAME_STR
            VALUE "LegalCopyright",     VER_LEGALCOPYRIGHT_STR
            VALUE "OriginalFilename",   VER_ORIGINALFILENAME_STR
            VALUE "ProductName",        VER_PRODUCTNAME_STR
            VALUE "ProductVersion",     VER_PRODUCTVERSION_STR
        END
    END

    BLOCK "VarFileInfo"
    BEGIN
        VALUE "Translation", 0x409, 1252
    END
END
